@mixin transition($transition) {
  -moz-transition: all $transition ease;
  -o-transition: all $transition ease;
  -webkit-transition: all $transition ease;
  -ms-transition: all $transition ease;
  transition: all $transition ease;
}

@mixin translate($x, $y) {
  -moz-transition: translate($x, $y);
  -o-transition: translate($x, $y);
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin theme($theme: DarkGray) {
  background: $theme;
  box-shadow: 0 0 1px rgba($theme, .25);
  color: #fff;
}

@mixin theme-light($theme: LightGray) {
  background: $theme;
  box-shadow: 0 0 1px rgba($theme, .25);
  color: #000;
}

@mixin theme-dark($theme: DarkGray) {
  background: $theme;
  box-shadow: 0 0 1px rgba($theme, .25);
  color: #fff;
}

@mixin _assert-ascending($list) {
  @if length($list) < 2 {
    @warn "List is too short to assert ascending order.";
  }

  $prev: nth($list, 1);
  @for $i from 2 through length($list) {
    $current: nth($list, $i);
    @if $current < $prev {
      @error "List is not in ascending order at index #{$i}: #{$current} < #{$prev}.";
    }
    $prev: $current;
  }
}